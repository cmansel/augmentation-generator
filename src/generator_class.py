from typing import Any
from .next import next as next_implementation
from .types import Data, Batch, AugmentationColumns, AugmentationProbability, BatchSize

GeneratorSelf = Any

class Generator:
    '''This generator class is used as an interface for the batch generation function next. It stores all the data necessary to
    generate new batches of augmented data, with each batch being generated by calling the next method.'''
    def __init__(self: GeneratorSelf, data: Data, augmentation_columns: AugmentationColumns, augmentation_probability: AugmentationProbability, batch_size: BatchSize) -> None:
        self.data = data
        self.augmentation_columns = augmentation_columns
        self.augmentation_probability = augmentation_probability
        self.batch_size = batch_size

    def next(self: GeneratorSelf) -> Batch:
        '''Calls implentation of batch generation and augmentation functionality'''
        return next_implementation(self.data, self.augmentation_columns, self.augmentation_probability, self.batch_size)
